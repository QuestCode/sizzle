//
//  AllMealsViewController.swift
//  FUDI
//
//  Created by Devontae Reid on 1/21/16.
//  Copyright Â© 2016 Devontae Reid. All rights reserved.
//

import UIKit

class AllMealsViewController: UIViewController {
    
    var meals: [Meal] {
        return Meal.listOfMeals()
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Left
        self.navigationItem.leftBarButtonItem = UIBarButtonItem(image: UIImage(named: "menuButton"), style: .Plain, target: self, action: "presentLeftMenuViewController")
        
        print(meals.count)
        self.tableViewSettings()
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    


}


extension AllMealsViewController: UITableViewDataSource, UITableViewDelegate
{
    func tableViewSettings()
    {
        let tableView: UITableView = UITableView()
        tableView.frame = CGRect(x: 0, y: view.frame.height/6, width: view.frame.width, height: view.frame.height)
        tableView.separatorColor = UIColor.peachColor()
        tableView.backgroundColor = UIColor.peachColor()
        tableView.registerClass(MakeAMealTableViewCell.self, forCellReuseIdentifier: "meal")
        view.addSubview(tableView)
        
        tableView.delegate = self
        tableView.dataSource = self
    }
    
    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        
        
        if meals.count == 0
        {
            return 1
        }
        else
        {
            return meals.count
        }
        
    }
    
    
    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCellWithIdentifier("meal", forIndexPath: indexPath) as! MakeAMealTableViewCell
        cell.selectionStyle = .None
        
        // Configure the cell...
        if meals.count == 0
        {
            cell.mealTitleView.text = "You don't have any favorites yet!"
        }
        else
        {
            let meal = self.meals[indexPath.row]
            cell.mealTitleView.text = meal.mealName
            cell.backgroundViewForImage.image = meal.mealImage
            cell.servingSizeLabel.text = "Servings: \(meal.servingSize)"
            cell.caloriesLabel.text = "Calories: \(Int(meal.calories))"
            cell.effortLabel.text = "Effort: \(meal.effortCategory)"
            
            asyncLoadMealImage(meal, imageView: cell.backgroundViewForImage)
            
//            let color = cell.backgroundViewForImage.image?.getColors()
//            cell.background.backgroundColor = color?.backgroundColor
//            cell.mealTitleView.textColor = color?.primaryColor
//            cell.effortLabel.textColor = color?.detailColor
//            cell.servingSizeLabel.textColor = color?.detailColor
//            cell.caloriesLabel.textColor = color?.detailColor
            //cell.detailTextLabel?.text = self.meals[indexPath.row].effortCategory
        }
        
        return cell
    }
    
    func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {
        return 130
    }
    
    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
        
        if meals.count == 0
        {
            
        }
        else
        {
            let meal = meals[indexPath.row]
            mealTitleLabel.text = meal.mealName
            mealImageView.image = meal.mealImage
            ingredients = meal.mealIngredients
            directions = meal.mealDirections
            time = meal.prepTime
            effort = meal.effortCategory
            servingSize = meal.servingSize
            numOfCarbs = Double(meal.carbs)
            numOfFat = Double(meal.fat)
            numOfProtein = Double(meal.protein)
            
            self.navigationController?.pushViewController(DetailViewController(), animated: true)
        }
        
        
    }
    
    
    func asyncLoadMealImage(meal: Meal, imageView: UIImageView)
    {
        dispatch_async(dispatch_get_main_queue()) { () -> Void in
            
            var image : UIImage?
            if meal.mealImage != nil {
                image = meal.mealImage
                imageView.image = image
            }
        }
    }

}